<!DOCTYPE html>
<html>
  <head>
    <title>Wiggle - VNC ({{uuid}})</title>
    <link type="text/css" rel="stylesheet" href="/css/bootstrap.css" />
    <link type="text/css" rel="stylesheet" href="/css/application.css" />
  </head>
  <body>
    <div class="navbar">
      <div class="navbar-inner">
        <div class="container">
          <a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </a>
          <span class="brand">Wiggle - VNC ({{uuid}})</span>
          <div class="nav-collapse">
	    <ul class="nav pull-right">
              <li{% if page=="account" %} class="active"{% endif %}><a href="/account">Account</a></li>
              <li><a href="/logout">Logout</a></li>
	    </ul>
          </div><!--/.nav-collapse -->
        </div>
      </div>
    </div>
    <br/>
    <br/>
    <br/>
    <div class="modal" id="modal" style="display: none;">
      <div class="modal-header">
	<button class="close" data-dismiss="modal">x</button>
	<h3>blubber</h3>
      </div>
      <div class="modal-body">
	<p></p>
      </div>
      <div class="modal-footer">
	
      </div>
    </div>
    
    <div class="container-fluid">
      <div class="row-fluid">
	<!-- Example row of columns -->
	<div class="span12">
	  <div id="noVNC_screen">
	    <div id="noVNC_status_bar">
	      <div class="row-fluid">
		<div id="noVNC_status" class="span9 alert alert-info">
		  Loading
		</div>
		<div id="noVNC_buttons" class="span2">
		  <input type=button value="Send CtrlAltDel!" id="sendCtrlAltDelButton">
		</div>
	      </div>
	    </div>
	    <canvas id="noVNC_canvas" width="640px" height="20px">
	      Canvas not supported.
	    </canvas>
	  </div>
	</div>
	
	<script type="application/javascript" src="/js/vnc/vnc.js">INCLUDE_URI="/js/";</script>
      </div>
      <hr>
      <footer>
	<p>&copy; licenser.net 2012</p>
      </footer>
    </div> <!-- /container -->
    <script type="application/javascript">INCLUDE_URI="/js/vnc/";</script>
    <script type="application/javascript" src="/js/jquery-1.7.2.min.js"></script>
    <script type="application/javascript" src="/js/bootstrap.js"></script>
    <script type="application/javascript" src="/js/ICanHaz.js"></script>
    <script type="application/javascript" src="/js/vnc/vnc.js"></script>


    <script type="application/javascript" src="/js/application.js"></script>
    



    <script type="application/javascript">
      /*jslint white: false */
      /*global window, $, Util, RFB, */
    function updateState(rfb, state, oldstate, msg) {
        var s, sb, cad, level;
        s = $D('noVNC_status');
        sb = $D('noVNC_status_bar');
        cad = $D('sendCtrlAltDelButton');
        switch (state) {
        case 'failed':       level = "error";  break;
        case 'fatal':        level = "error";  break;
        case 'normal':       level = "info"; break;
        case 'disconnected': level = "info"; break;
        case 'loaded':       level = "info"; break;
        default:             level = "warn";   break;
        }
	
        if (state === "normal" && cad) { cad.disabled = false; }
        else                    { if (cad) cad.disabled = true; }
	
        if (typeof(msg) !== 'undefined' && sb && s) {
            s.setAttribute("class", "span9 alert alert-" + level);
            s.innerHTML = msg;
        }
    }
      function sendCtrlAltDel() {
      rfb.sendCtrlAltDel();
      return false;
      }
      window.onload = function () {
            var host, port, password, path, token;

          $D('sendCtrlAltDelButton').style.display = "inline";
            $D('sendCtrlAltDelButton').onclick = sendCtrlAltDel;

            // By default, use the host and port of server that served this file
            host = WebUtil.getQueryVar('host', window.location.hostname);
            port = WebUtil.getQueryVar('port', window.location.port);

            // If a token variable is passed in, set the parameter in a cookie.
            // This is used by nova-novncproxy.
            token = WebUtil.getQueryVar('token', null);
            if (token) {
                WebUtil.createCookie('token', token, 1)
            }

            password = WebUtil.getQueryVar('password', '');
            path = document.location.pathname.substr(1);
            if ((!host) || (!port)) {
                updateState('failed',
                    "Must specify host and port in URL");
                return;
            }

        rfb = new RFB({'target':       $D('noVNC_canvas'),
                       'encrypt':      (window.location.protocol === "https:"),
                       'true_color':   true,
                       'local_cursor': true,
                       'shared':       true,
                       'view_only':    false,
                       'updateState':  updateState});
          rfb.connect(host, port, password, path);
          };
    </script>

  </body>
</html>
